# -*- coding: utf-8 -*-
"""연습

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f_989OzqcWzn4KVUywFLlSzZOVue2bkQ

## 금융 뉴스 키워드(빈도) 분석
- 빅카인즈 자료 참고
"""



"""### 함수 실행"""

!pip install konlpy

import pandas as pd
from konlpy.tag import Okt
okt = Okt()

reviews_df = pd.read_csv('/content/drive/MyDrive/DataYC_project/키워드 선정/NewsResult_20230430-20230730.csv',encoding='cp949')

reviews_df.head(5)

len(reviews_df)

"""### 명사 추출"""

def tokenizer(text):
    morph = okt.pos(text)
    words = []
    for word, tag in morph:
        if tag in ['Noun']:
            if len(word) > 1:
                words.append(word)
    return words

reviews_df= reviews_df.astype('str')

reviews_df['제목'] = reviews_df['제목'].apply(tokenizer)

reviews_df['제목']

reviews_df.to_csv('명사추출.csv', encoding='utf-8')

reviews_df= reviews_df.astype('str')

from sklearn.feature_extraction.text import CountVectorizer
cv = CountVectorizer(max_features=5000, ngram_range=(1, 1))
tdm = cv.fit_transform(reviews_df.제목)
word_count_tf = pd.DataFrame({'단어': cv.get_feature_names_out(), '빈도': tdm.sum(axis=0).flat})

word_count_tf

word_count_tf = word_count_tf.sort_values('빈도', ascending=False)
word_count_tf

"""## 결과값"""

word_count_tf = word_count_tf.reset_index(drop=True)
word_count_tf.index = word_count_tf.index + 1

word_count_tf

## 인덱스 123 순서 + 빈도 오름차순 정렬 csv 파일 출력

word_count_tf.to_csv('빈도.csv', encoding='cp949')

